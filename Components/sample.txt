import { Camera, useCameraDevices, useFrameProcessor } from 'react-native-vision-camera';
import { useState, useEffect } from 'react';
import { useSharedValue } from 'react-native-reanimated';
import { useScanBarcodes, BarcodeFormat } from 'vision-camera-code-scanner';
import { RNCamera } from 'react-native-camera'
import { Button, StyleSheet, Text, TouchableOpacity, View, showToast } from 'react-native';
const VideoPage = () => {
  const devices = useCameraDevices()
  const device = devices.front
  const [barcode, setBarcode] = useState('');
  const [hasPermission, setHasPermission] = useState(false);
  const [isScanned, setIsScanned] = useState(false);
  const checkCameraPermission = async () => {
    let status = await Camera.getCameraPermissionStatus();
    if (status !== 'authorized') {
      await Camera.requestCameraPermission();
      status = await Camera.getCameraPermissionStatus();
      if (status === 'denied') {
        showToast(
          'You will not be able to scan if you do not allow camera access',
        );
      }
    }
  };
  useEffect(() => {
    checkCameraPermission();
  }, []);
  useEffect(() => {
    toggleActiveState();
    return () => {
      barcodes;
    };
  }, [barcodes]);

  const toggleActiveState = async () => {
    if (barcodes && barcodes.length > 0 && isScanned === false) {
      setIsScanned(true);
      // setBarcode('');
      barcodes.forEach(async (scannedBarcode) => {
        if (scannedBarcode.rawValue !== '') {
          setBarcode(scannedBarcode.rawValue);
          Alert.alert(barcode);
        }
      });
    }
  };


  const [frameProcessor, barcodes] = useScanBarcodes([
    BarcodeFormat.ALL_FORMATS, // You can only specify a particular format
  ]);

  if (device == null) return (<Text>Hello</Text>)
  return (
    <View style={{ flex: 1 }}>
      <Camera
        style={StyleSheet.absoluteFill}
        device={device}
        isActive={true}
        // frameProcessor={frameProcessor}
        frameProcessorFps={5}
        audio={false}
      />
      {/* <Text>hello hi</Text> */}
    </View>

  )
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  buttonContainer: {
    backgroundColor: "#fff",
    alignSelf: "flex-end"
  },
  video: {
    flex: 1,
    alignSelf: "stretch"
  }
})
export default VideoPage;